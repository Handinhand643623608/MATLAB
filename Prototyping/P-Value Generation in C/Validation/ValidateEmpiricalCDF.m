function [pc, pm, pn] = ValidateEmpiricalCDF
% VALIDATEEMPIRICALCDF - Validates the results of empirical p-value generation algorithms.
%
%	This function investigates the validity of results produced by empirical CDF generation algorithms being used for my
%	research. Specifically, it investigate whether or not p-values generated by a MATLAB-native algorithm agrees with
%	p-values generated through a C-language mex function. It will also investigate the agreement between each of these
%	methods and canonically true results generated using a theoretical standard normal distribution. Agreement will be
%	ascertained by visual inspection for now.
%
%	APPROACHES:
%		The approaches to generating p-values that are tested using this function are as follows:
%
%			1. Canonical	- Generation using the NORMCDF function in MATLAB: p = 2 * normcdf(-abs(r), 0, 1);
%			2. Mex			- Generation using the new MexEmpiricalCDF mex function written in C.
%			3. Native		- Generation using the same algorithm in method 2 but written in the MATLAB language.
%
%	RESULTS 20141124:
%		Mex and Native methods produce identical results, which is ideal. Additionally, results line up well with
%		canonical p-value generation using the NORMCDF function from MATLAB. Naturally, agreement is not exact because
%		the null distributions here are not perfectly normal, but the difference is minimal (generally < 0.01).

%% CHANGELOG
%	Written by Josh Grooms on 20141124



%% Perform the Validation
numSamples = 10000;

writeLine = @(msg, varargin) fprintf(1, [msg '\n'], varargin{:});
writeLine('\n');

r = randn(numSamples, 1);
n = randn(numSamples, 1);

pc = Canonical(r);
pm = Mex(r, n);
pn = Native(r, n);

if isequal(pc, pm); writeLine('Canonical and Mex p-values agree perfectly!'); end
if isequal(pc, pn); writeLine('Canonical and Native p-values agree perfectly!'); end
if isequal(pm, pn); writeLine('Mex and Native p-values agree perfectly!'); end

writeLine('\nSample Canonical p-Values:');
disp([pc(1:10) pc(end-9:end)]);
writeLine('\nSample Mex p-Values:');
disp([pm(1:10) pm(end-9:end)]);
writeLine('\nSample Native p-Values:');
disp([pn(1:10) pn(end-9:end)]);


end









function p = Canonical(r)
% CANCONICAL - Calculates p-values using a standard normal distribution function.
	p = 2 * normcdf(-abs(r), 0, 1);
end

function p = Mex(r, n)
% MEX - Calculates empirical p-values using the newly compiled mex function.
	p = MexEmpiricalCDF(r, n);
end

function p = Native(r, n)
% NATIVE - Calculates empirical p-values using the old MATLAB native code.
	lr = length(r);
	ln = length(n);
	p = zeros(lr, 1);
	invN = 1 / ln;
	
	for a = 1:lr
		pval = sum(r(a) >= n) * invN;
		p(a) = 2 * min(pval, 1 - pval);
	end
end