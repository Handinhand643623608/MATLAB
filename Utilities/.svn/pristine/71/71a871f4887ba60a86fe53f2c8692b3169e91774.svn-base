function u_imageMontage(inData, varargin)

%% Initialize
% Initialize the defaults structure
szData = size(inData);
inStruct = struct(...
    'dataType', 'MRI',...
    'eegChannels', [],...
    'plotTitle', [],...
    'xLabel', [],...
    'xTickLabel', [],...
    'yLabel', [],...
    'yTickLabel', [],...
    'colorMap', [jet(256)],...
    'szFig', [1920 0.5*1080],...
    'visibleFig', 'off',...
    'slicesToPlot', [1:szData(end - 1)],...
    'shiftsToPlot', [1:szData(end)],...
    'NaNColor', [0 0 0]);
assignInputs(inStruct, varargin, {'dataType'}, 'upper(varPlaceholder)');


switch dataType
    
    %% MRI Data
    case 'MRI'
        % Condition the input data
        inData = inData(:, :, slicesToPlot, shiftsToPlot);
        inData(inData == 0) = NaN;

        % Scale magnitude values to 256-level Jet colormap
        [rgbData dataRange numColors] = scale2rgb(inData, 'colorMap', colorMap, 'NaNColor', NaNColor);
        
        % Scaling places RGB values in the last dimension: adjust dimensions
        rgbData = permute(rgbData, [2 1 5 4 3]);
        
        % Concatenate slices into the time shift dimension (dim 4)
        rgbData = reshape(rgbData, [szData(2) szData(1) 3 szData(4)*size(rgbData(5))]);
        
    %% EEG Data
    case 'EEG'
        % Generate EEG images
        tempPath = [pwd '\tempEEG'];
        if ~exist(tempPath, 'dir')
            mkdir(tempPath)
        end
        m = 1;
        for i = slicesToPlot
            for j = 1:size(inData, 2)
                u_colormap_EEG(inData(:, j, i), eegChannels, [-0.2 0.2]);
                set(gcf, 'Visible', 'off')
                saveas(gcf, [tempPath '\' sprintf('%03d', m)], 'png');
                close
            end
        end
        
        % Get the range of the data
        dataRange = [min(inData(:)) max(inData(:))];
        
        % Get EEG filenames
        rgbData = fileNames(...
            'searchPath', tempPath,...
            'fileExt', 'm',...
            'sortBy', 'date',...
            'sortDirection', 'descend');
end

%% Make a Montage of the Data
figure('Visible', visibleFig);
montage(testImFormat2, 'Size', [length(shiftsToPlot) length(slicesToPlot)])

% Adjust figure properties
newRange = sigFig(dataRange, 'outFormat', '0.0', 'roundOpt', '-fix');
cBarRange = newRange(1):(diff(newRange))/10:newRange(2);
set(gcf, 'Colormap', jet(numColors));
cBarHandle = colorbar;
set(cBarHandle,...
    'YLim', [0 numColors],...
    'YTick', 0:(numColors/10):numColors,...
    'YTickLabel', cBarRange);




