function inStruct = parameters(brainData)
%PARAMETERS Returns a parameter structure with default values for plotting brain images.
%   This function exists only to return a default parameter structure that governs the entire image
%   generation process. The fields within the output constitute all possible user input accepted
%   during the instantiaion of a BRAINPLOT object.
%
%   SYNTAX:
%   paramStruct = parameters(corrObj)
%
%   OUTPUT: 
%   inStruct:       This is a structure whose fields constitute the only available user input to the
%                   plot data object. Default values are filled in. Change any of these values as
%                   needed and input the structure back into BRAINPLOT using the STRUCT2VAR
%                   function. 
%                   EXAMPLE:
%                       inStruct = parameters(brainPlot);
%                       % Change field values as needed
%                       .
%                       .
%                       .
%                       plotParams = struct2var(inStruct);
%                       plotData = corrObj(plotParams{:});
%
%   INPUT:
%   brainplot:      The input to this function must always be "brainData" (without quotes) and 
%                   nothing else. This is so MATLAB knows which method to call to return the correct
%                   parameter structure. BRAINPLOT is the class name of this plot data object.
%
%   Written by Josh Grooms on 20130702


%% The Plot Data Object Input Parameter Structure
load masterStructs
inStruct = struct(...
    'Anatomical', [],...
    'AxesColor', 'w',...
    'Channels', {paramStruct.general.channels},...
    'CLim', [],...
    'Color', 'k',...
    'Colorbar', 'on',...
    'ColorbarLabel', [],...
    'Colormap', jet(256),...
    'Montage', 'on',...
    'Position', 'top-right',...    
    'Size', 'fullscreen',...
    'Title', [],...
    'Units', 'normalized',...
    'Visible', 'on',...
    'XDim', [],...
    'XLabel', [],...
    'XTickLabel', [],...
    'YDim', [],...
    'YLabel', [],...
    'YTickLabel', []);
close(brainData);