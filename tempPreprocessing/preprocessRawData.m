%% Preprocess New Data
%
% Dependencies
%   File Management Package
%   Garth's dataobject functions
%
%   assignInputs.m
%   preprocess.m
%
%   Written by Josh Grooms on 20130614
%       20130619:   Bug fixes for space in "Preprocessed_Data" output
%                   folder and for deleting the scan folder paths
%                   accidentally.


%% Data Structure
dataStruct = struct(...
    'Data', struct(...
        'Anatomical', [],...
        'BOLD', [],...
        'Mean', [],...
        'Nuisance', struct(...
            'Motion', [],...
            'Global', [],...
            'WM', [],...
            'CSF', []),...
        'Segments', struct(...
            'CSF', [],...
            'GM', [],...
            'WM', []),...
    'Files', struct(...
        'AnatomicalFolder', [],...
        'FunctionalFolder', [],...
        'IMG', struct(...
            'Anatomical', [],...
            'FunctionalStr', [],...
            'BiasCorrected', [],...
            'Mean', [],...
            'Normalized', struct(...
                'BiasCorrected', [],...
                'FunctionalStr', [],...
                'Mean', [],...
                'Segments', []),...
            'Registered', struct(...
                'FunctionalStr', [],...
                'Mean', []),...
            'Segment', []),...
        'IMGFolder', [],...
        'MeanDicom', [],...
        'MNIBrain', '/shella-lab/Josh/Globals/MNI/template/T1.nii',...
        'MNIFolder', '/shella-lab/Josh/Globals/MNI',...
        'NumSlicesPerFile', [],...
        'ROIFolder', '/shella-lab/Josh/Globals/MNI/roi',...
        'SegmentsFolder', '/shella-lab/Josh/Globals/MNI/segments'),...
    'Parameters', struct(...
        'TR', [],...
        




%% Initialize
% Variables that are likely to change
TR = 2;
subjects = 10;       % Example: [1 2 3 4 5 6 7 8 9 10...] for specific subjects (1-10 here)
scans = cell(1, 10); scans{10} = 2;
numSlices = 36;         % Number of slices in the z direction
slicesPerFile = 1;      % Number of slices contained in a single file
filterLength = 50;      % Length of FIR filter (in seconds)
uppermostPath = '/shella-lab/Josh/Test';

% All variables
paramStruct = struct(...
    'Initialization', struct(...
        'MNIFolder', '/shella-lab/Josh/Globals/MNI',...
        'NumSlicesPerFile', 1,...
        'TR', TR),...
    'Segmentation', struct(...
        'BiasReg', 0.0001,...
        'BiasFWHM', 60,...
        'Cleanup', false,...
        'MaskImage', {{''}},...
        'NumGauss', [2 2 2 4],...
        'OutputCorrected', true,...
        'OutputCSF', [0 0 1],...
        'OutputGM', [0 0 1],...
        'OutputWM', [0 0 1],...
        'RegType', 'mni',...
        'SampleDistance', 3,...
        'WarpReg', true,...
        'WarpCutoff', 25),...
    'Registration', struct(...
        'CostFunction', 'nmi',...
        'FWHMSmoothing', [7 7],...
        'Interpolation', 1,...
        'Masking', 0,...
        'OutputPrefix', 'r',...
        'Separation', [4 2],...
        'Tolerances', [0.02 0.02 0.02 0.001 0.001 0.001 0.01 0.01 0.01 0.001 0.001 0.001 0.001],...
        'Wrapping', [0 0 0]),...
    'Normalization', struct(...
        'AmtRegularization', 1,...
        'BoundingBox', [-78 -112 -50; 78 76 85],...
        'DCTCutoff', 25,...
        'Interpolation', 1,...
        'Masking', false,...
        'NormPrefix', 'w',...
        'NumIterations', 16,...
        'Preservation', 0,...
        'RegPrefix', 'r',...
        'Regularization', 'mni',...
        'SourceSmoothing', 8,...
        'TemplateImage', {{[dataStruct.Files.MNIBrain ',1']}},...
        'TemplateSmoothing', 0,...
        'TemplateWeightImage', {''},...
        'VoxelSize', [2 2 2],...
        'Wrapping', [0 0 0]),...
    'Conditioning', struct(...
        'BlurMasks', true,...
        'CSFCutoff', 0.2,...
        'DetrendOrder', 2,...
        'FilterLength', 300,...
        'GMCutoff', 0.1,...
        'MeanCutoff', 0.2,...
        'NumPCToRegress', NaN,...
        'NumTRToRemove', 0,...
        'Passband', [[0.01 0.08]],...
        'PCAVarCutoff', 0.0001,...
        'RegressCSF', true,...
        'SpatialBlurSigma', 2,...
        'SpatialBlurSize', 3,...
        'UsePCA', false,...
        'WMCutoff', 0.15));
        


% uppermostPath = '/data1/shares/brainiac-shared/mmerritt/FullBrainPVT';
%---------------------------------

%% Get File & Directory Information
% addpath(genpath(uppermostPath));
saveDir = [uppermostPath '/Preprocessed_Data'];
if ~exist(saveDir, 'dir')
    mkdir(saveDir)
end
dataFolders = {[uppermostPath '/PVT_RAW_1/Raw_Data'];
               [uppermostPath '/PVT_RAW_2']};
mniFolder = '/shella-lab/Josh/Globals/MNI';
roiFolder = [mniFolder '/roi'];
segFolder = [mniFolder '/segments'];
mniBrain = [mniFolder '/template/T1.nii'];

% Get subject & scan data folders
subjectFolders = {};
for a = 1:length(dataFolders)
    subjectFolders = cat(1, subjectFolders, get(fileData(dataFolders{a}, 'Folders', 'on', 'Search', 'PVT'), 'Path'));    
end
for a = 1:length(subjectFolders)
    scanFolders{a} = get(fileData(subjectFolders{a}, 'Folders', 'on', 'Search', 'fmri'), 'Path');
    scanFolders{a}(end) = [];      % <--- There are fmri_loc folders for each subject...don't know what these are
end        

% Change over subject/scan variables
if strcmpi(subjects, 'all')
    subjects = 1:length(subjectFolders);
end
if strcmpi(scans, 'all')
    scans = cell(1, length(subjects));
    for a = 1:length(subjects)
        scans{a} = 1:length(scanFolders{a});
    end
end


%% Preprocess & Aggregate the Data
% Loop through each individual subject
for a = subjects
    % Get the anatomical scan data
    currentAnatomicalFolder = get(fileData(subjectFolders{a}, 'Folders', 'on', 'Search', 't1'), 'Path');
    currentAnatomicalFolder = currentAnatomicalFolder{1};
        
    % Get the scan date from the functional folder name
    dateExpr = '_(\d\d\d\d\d\d\d\d)';
    currentScanDate = regexp(subjectFolders{a}, dateExpr, 'tokens');
    
    % Loop through each individual scan
    for b = scans{a}
        % Get the full path of the current functional data folder
        currentFunctionalFolder = scanFolders{a}{b};
        currentIMGFolder = [currentFunctionalFolder '/IMG'];                
        
        % Run preprocessing
        [currentHumanData, numVolumes] = preprocess(...
            currentFunctionalFolder,...
            currentAnatomicalFolder,...
            currentIMGFolder,...
            segFolder,...
            roiFolder,...
            mniBrain,...
            slicesPerFile,...
            TR,...
            numSlices,...
            filterLength);
        
        % Create new data structure or append to an existing one
        if ~exist('humanData', 'var')
            humanData = currentHumanData;
        else
            humanData = dataobject_append_all(humanData, currentHumanData);
        end        
    end
    
    save([saveDir '/human_data_' currentScanDate{1} '.mat'], 'humanData', '-v7.3');
    clear humanData current*
end