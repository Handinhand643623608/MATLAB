function PrepBRIKToIMG(boldData)
%PREPBRIKTOIMG - Converts BRIK images from AFNI into the SPM-compatible NIFTI format.
%   This function uses AFNI to convert images from BRIK format into ANALYZE format, which is compatible with the SPM
%   preprocessing used in later steps. Because this function uses AFNI, it is only compatible with computers running the
%   Linux operating system.
%
%   SYNTAX:
%   PrepBRIKToIMG(boldData)
%
%   INPUT:
%   boldData:       BOLDOBJ
%                   A single BOLD data object undergoing preprocessing.

%% CHANGELOG
%   Written by Josh Grooms on 20130707
%       20130708:   Bug fix for storing mean IMG file name as a cell instead of a string.
%       20140623:   Implemented a fix for using compressed .BRIK files generated by newer versions of AFNI. In this
%                   case, the extensions of some needed files are changed whenever AFNI outputs data.
%       20140720:   Added in the option to turn off slice-timing corrections. This shouldn't be used on data sets with
%                   fast TRs.



%% Initialize
% Get folder paths from data structure
functionalFolder = boldData.Preprocessing.Folders.Functional;
meanFolder = boldData.Preprocessing.Folders.Mean;
imgFolder = boldData.Preprocessing.Folders.IMG.Root;
useSTC = boldData.Preprocessing.Parameters.General.UseSliceTimingCorrection;

% AFNI file names
if istrue(useSTC); afniName = 'tshift_reg';
else afniName = '_reg';
end
meanAFNIName = 'mean_template';

% Get .BRIK filenames
brikFile = fileData(functionalFolder, 'Ext', '.BRIK', 'Search', afniName, 'ErrorOnEmpty', false);
meanBRIKFile = fileData(meanFolder, 'ext', '.BRIK', 'ErrorOnEmpty', false);

% Check for compressed .BRIK files (in case AFNI compressed outputs)
if isempty(brikFile.Name)
    brikFile = fileData(functionalFolder, 'Ext', '.BRIK.gz', 'Search', afniName);
end
if isempty(meanBRIKFile.Name)
    meanBRIKFile = fileData(meanFolder, 'ext', '.BRIK.gz');
end

% Get the current working directory to easily switch back to it later
origDir = pwd;



%% Convert AFNI Images to NIFTI Format
cd(functionalFolder)

% Run the conversion
system(['3dAFNItoANALYZE -orient rpi ' afniName ' ' brikFile.Name]);

% Move files to the IMG folder
movefile([functionalFolder '/' afniName '_*.img'], imgFolder);
movefile([functionalFolder '/' afniName '_*.hdr'], imgFolder);

% Now convert the mean image
cd(meanFolder)
system(['3dAFNItoANALYZE -orient rpi ' meanAFNIName ' ' meanBRIKFile.Name]);

% Overwrite the structure's mean image with the converted one
meanIMG = get(fileData(meanFolder, 'ext', '.img'), 'Path');
boldData.Preprocessing.Files.IMG.Mean = meanIMG{1};

% Switch back to the original directory
cd(origDir)

% Save a search string for use in SPM
boldData.Preprocessing.Files.IMG.FunctionalStr = afniName;